{'project': 'Painting Software with Web UI', 'files': {'index.html': {'description': 'Main HTML file for the web application.', 'content': ['<!DOCTYPE html>', "<html lang='en'>", '<head>', "    <meta charset='UTF-8'>", "    <meta name='viewport' content='width=device-width, initial-scale=1.0'>", '    <title>Painting Software</title>', "    <link rel='stylesheet' href='styles.css'>", '</head>', '<body>', "    <div id='toolbar'>", "        <input type='color' id='brushColor' />", "        <input type='range' id='brushSize' min='1' max='100' value='5' />", "        <button id='eraserButton'>Eraser</button>", '    </div>', "    <canvas id='paintingCanvas'></canvas>", "    <script src='script.js'></script>", '</body>', '</html>']}, 'styles.css': {'description': 'CSS file for styling the web application.', 'content': ['body {', '    font-family: Arial, sans-serif;', '}', '#toolbar {', '    margin: 10px;', '}', '#paintingCanvas {', '    border: 1px solid black;', '    margin-top: 20px;', '}']}, 'script.js': {'description': 'JavaScript file for handling the painting logic.', 'content': ["const canvas = document.getElementById('paintingCanvas');", "const ctx = canvas.getContext('2d');", "const brushColorInput = document.getElementById('brushColor');", "const brushSizeInput = document.getElementById('brushSize');", "const eraserButton = document.getElementById('eraserButton');", 'let isDrawing = false;', "let brushColor = '#000000';", 'let brushSize = 5;', 'let isEraserActive = false;', '', 'canvas.width = window.innerWidth - 50;', 'canvas.height = window.innerHeight - 200;', '', 'function startDrawing(event) {', '    isDrawing = true;', '    draw(event);', '}', '', 'function endDrawing() {', '    isDrawing = false;', '    ctx.beginPath();', '}', '', 'function draw(event) {', '    if (!isDrawing) return;', '    ctx.lineWidth = isEraserActive ? 50 : brushSize;', "    ctx.lineCap = 'round';", "    ctx.strokeStyle = isEraserActive ? '#FFFFFF' : brushColor;", '    ctx.lineTo(event.clientX - canvas.offsetLeft, event.clientY - canvas.offsetTop);', '    ctx.stroke();', '    ctx.beginPath();', '    ctx.moveTo(event.clientX - canvas.offsetLeft, event.clientY - canvas.offsetTop);', '}', '', "canvas.addEventListener('mousedown', startDrawing);", "canvas.addEventListener('mouseup', endDrawing);", "canvas.addEventListener('mousemove', draw);", '', "brushColorInput.addEventListener('input', (event) => {", '    brushColor = event.target.value;', '});', '', "brushSizeInput.addEventListener('input', (event) => {", '    brushSize = event.target.value;', '});', '', "eraserButton.addEventListener('click', () => {", '    isEraserActive = !isEraserActive;', "    eraserButton.innerText = isEraserActive ? 'Brush' : 'Eraser';", '});']}}, 'functions_and_classes': {'classes': [], 'functions': ['startDrawing(event)', 'endDrawing()', 'draw(event)', 'addEventListeners() // function to group and add all event listeners']}}